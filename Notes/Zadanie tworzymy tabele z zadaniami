//1. Napisz polecenie SQL tworzące tabelę ISSUESLISTS, wraz z jej ograniczeniami i więzami integralności//

CREATE TABLE ISSUESLISTS
(
    ID    SERIAL PRIMARY KEY,

    NAME   VARCHAR(100)
);

//2. Napisz polecenie SQL tworzące tabelę ISSUES, wraz z jej ograniczeniami i więzami integralności//

CREATE TABLE ISSUESS
(
    ID    SERIAL PRIMARY KEY,

	ISSUESLIST_ID  BIGINT UNSIGNED NOT NULL,

	SUMMARY VARCHAR(500),

	DESCRIPTION VARCHAR(1024),

    USER_ID_ASSIGNEDTO   BIGINT UNSIGNED NOT NULL,

	FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID),

	FOREIGN KEY (ISSUESLIST_ID) REFERENCES USERS(ID)


);

//3. Napisz polecenia SQL dodające do tabeli ISSUESLISTS trzy listy zadań o nazwach “ToDo”, “In progress” oraz “Done”.//

 INSERT INTO ISSUESLISTS (NAME)
 VALUES ("ToDo");

 INSERT INTO ISSUESLISTS  (NAME)
 VALUES ("In progress" );

 INSERT INTO ISSUESLISTS  (NAME)
 VALUES ("Done" );

//4. Napisz polecenia SQL dodające do tabeli ISSUES po kilka (co najmniej pięć) zadań dla każdej z list//

INSERT INTO ISSUESS (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1, "XCXCXC", "GFGGFGFG", 1);

INSERT INTO ISSUESS (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (2, "YUREGHJ", "BGFRE", 2);

INSERT INTO ISSUESS (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (3, "MBVBGGF", "FFGFGFG", 3);

INSERT INTO ISSUESS (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (4, "FFTFGG", "FGFGFDD", 4);

INSERT INTO ISSUESS (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (5, "3ERT66", "665RRE", 5);


